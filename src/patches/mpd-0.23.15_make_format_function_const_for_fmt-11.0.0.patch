diff -Naur mpd-0.23.15.orig/src/lib/ffmpeg/LibFmt.hxx mpd-0.23.15/src/lib/ffmpeg/LibFmt.hxx
--- mpd-0.23.15.orig/src/lib/ffmpeg/LibFmt.hxx	2023-12-20 16:21:57.000000000 +0100
+++ mpd-0.23.15/src/lib/ffmpeg/LibFmt.hxx	2024-07-15 23:04:27.093307051 +0200
@@ -29,7 +29,7 @@
 struct fmt::formatter<AVSampleFormat> : formatter<string_view>
 {
 	template<typename FormatContext>
-	auto format(const AVSampleFormat format, FormatContext &ctx) {
+	auto format(const AVSampleFormat format, FormatContext &ctx) const {
 		const char *name = av_get_sample_fmt_name(format);
 		if (name == nullptr)
 			name = "?";
diff -Naur mpd-0.23.15.orig/src/lib/fmt/AudioFormatFormatter.hxx mpd-0.23.15/src/lib/fmt/AudioFormatFormatter.hxx
--- mpd-0.23.15.orig/src/lib/fmt/AudioFormatFormatter.hxx	2023-12-20 16:21:57.000000000 +0100
+++ mpd-0.23.15/src/lib/fmt/AudioFormatFormatter.hxx	2024-07-15 23:05:48.519267115 +0200
@@ -39,7 +39,7 @@
 struct fmt::formatter<SampleFormat> : formatter<string_view>
 {
 	template<typename FormatContext>
-	auto format(const SampleFormat format, FormatContext &ctx) {
+	auto format(const SampleFormat format, FormatContext &ctx) const {
 		return formatter<string_view>::format(sample_format_to_string(format),
 						      ctx);
 	}
@@ -49,7 +49,7 @@
 struct fmt::formatter<AudioFormat> : formatter<string_view>
 {
 	template<typename FormatContext>
-	auto format(const AudioFormat &af, FormatContext &ctx) {
+	auto format(const AudioFormat &af, FormatContext &ctx) const {
 		return formatter<string_view>::format(ToString(af).c_str(),
 						      ctx);
 	}
diff -Naur mpd-0.23.15.orig/src/lib/fmt/ExceptionFormatter.hxx mpd-0.23.15/src/lib/fmt/ExceptionFormatter.hxx
--- mpd-0.23.15.orig/src/lib/fmt/ExceptionFormatter.hxx	2023-12-20 16:21:57.000000000 +0100
+++ mpd-0.23.15/src/lib/fmt/ExceptionFormatter.hxx	2024-07-15 23:06:21.330325382 +0200
@@ -38,7 +38,7 @@
 struct fmt::formatter<std::exception_ptr> : formatter<string_view>
 {
 	template<typename FormatContext>
-	auto format(std::exception_ptr e, FormatContext &ctx) {
+	auto format(std::exception_ptr e, FormatContext &ctx) const {
 		return formatter<string_view>::format(GetFullMessage(e), ctx);
 	}
 };
diff -Naur mpd-0.23.15.orig/src/lib/fmt/PathFormatter.hxx mpd-0.23.15/src/lib/fmt/PathFormatter.hxx
--- mpd-0.23.15.orig/src/lib/fmt/PathFormatter.hxx	2023-12-20 16:21:57.000000000 +0100
+++ mpd-0.23.15/src/lib/fmt/PathFormatter.hxx	2024-07-15 23:07:13.908687683 +0200
@@ -29,7 +29,7 @@
 struct fmt::formatter<Path> : formatter<string_view>
 {
 	template<typename FormatContext>
-	auto format(Path path, FormatContext &ctx) {
+	auto format(Path path, FormatContext &ctx) const {
 		return formatter<string_view>::format(path.ToUTF8(), ctx);
 	}
 };
